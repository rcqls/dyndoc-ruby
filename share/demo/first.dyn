[#md>]# dyndoc project

TODO: DESCRIPTION

## Install

[#txtl>]h1. test

[#rb<]p Dyndoc.cfg_dyn[:root_doc]

[#rb<]nn=15;n2=3
(1..10).map do |i| #
end

[#R>>]rnorm(:{nn})
log(-1)
a<-c(1,3,2)
version
[#>]

titi

{#rverb]rnorm(20)[#rverb}

[#rb>]
(1..10).each do |i| #
	{#>]elt:{i}\\[#>}
	a=1
end

[#R>]
for(i in 1:5) {
	{#>]eltR:r{i}\\[#>}
	a<-1
}


[#>]{#img]plot(rnorm(10))[#}


[#adoc>]
== First Section

IMPORTANT: When upgrading to Asciidoctor 1.5.0, please refer to the {uri-migration}[migration guide] for details about how to migrate your content.


[source,ruby]
----
require 'sinatra' // <1>

get '/hi' do // <2>
  "Hello World!" // <3>
end
----
<1> Library import
<2> URL mapping
<3> Content for response

image::http://asciidoctor.org/images/octocat.jpg[GitHub mascot]

* Every list item has at least one paragraph of content,
  which may be wrapped, even using a hanging indent.
+
Additional paragraphs or blocks are adjoined by putting
a list continuation on a line adjacent to both blocks.
+
list continuation:: a plus sign (`{plus}`) on a line by itself

* A literal paragraph does not require a list continuation.

 $ gem install asciidoctor

* AsciiDoc lists may contain any complex content.
+
[cols="2", options="header"]
||===
||Application
||Language

||AsciiDoc
||Python

||Asciidoctor
||Ruby
||===

- [*] checked
- [x] also checked
- [ ] not checked
-     normal list item

. level 1
.. level 2
... level 3
.... level 4
..... level 5
. level 1

[cols="2", options="header"]
||===
||Application
||Language

||AsciiDoc
||Python

||Asciidoctor
||Ruby
||===
