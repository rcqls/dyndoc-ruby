#!/usr/bin/env ruby
require 'dyndoc-convert'

## To put inside yaml config file!
root = File.join(ENV["HOME"],"RCqls","RodaServer")
edit_root = File.join(root ,"edit")
pages_root = File.join(root ,"public","pages")
current_email="rdrouilh@gmail.com"

args=ARGV
args=["-h"] if args.empty?

require 'optparse'

$VERBOSE = nil

## Examples:
## 1) global mode:
##    dyn-html /dev/R/test.dyn
## 2) user mode: % instead of ~ since ~ is interpreted in bash mode!
##    dyn-html -u remy.drouilhet@upmf-grenoble.fr %/cfies2017/index.dyn:index
##    dyn-html -u remy.drouilhet@upmf-grenoble.fr %/cfies2017/index.dyn:all

OptionParser.new do |opts|
  opts.banner = "Usage: dyn-html [-u email_user] [%]/<relative_path>/<file>.dyn "

  opts.on( '-u', '--user EMAIL', 'user email' ) do |email|
    current_email=email
  end
end.parse!(args)


## THIS IS A COPY FROM edit.rb
## TODO: TO PLACE IN SOME COMMON LIBRARY!
module Edit

  def Edit.docs_from_doc_tags_info(doc_tags_info)
    docs={}
    unless doc_tags_info.empty?
      doc_tags_info.split(",").each{|e|
        if e.strip =~ /^([^\(]*)(\([^\(\)]*\))?$/
          docs[$1.strip]=($2 || "("+$1.strip+")")[1..-2].strip
        end
      }
    end
    return docs
  end

  def Edit.get_doc_tags_info(content)
    doc_tags_info=""
    if content =~ /^\-{3}/
        b=content.split(/^(\-{3,})/,-1)
        if b[0].empty? and b.length>4
          tmp=b[2].strip.split("\n").select{|e2| e2.strip =~/^docs\:/}
          doc_tags_info=tmp[0] || ""
          doc_tags_info=$1.strip if doc_tags_info =~ /^docs\:(.*)/
        end
    end
    return doc_tags_info
  end

  def Edit.get_docs(doc_tags_info)
    Edit.docs_from_doc_tags_info(doc_tags_info)
  end

  def Edit.get_doc_tags(doc_tags_info)
    Edit.get_docs(doc_tags_info).keys
  end

  def Edit.get_doc_tags_menu(doc_tags_info)
    doc_tags=Edit.get_doc_tags(doc_tags_info)
    return "" if doc_tags.empty?
    doc_tags="<div class=\"item\" data-value=\"\">default</div>"+doc_tags.map{|e| "<div class=\"item\">"+e+"</div>"}.join("")
    ##p [:dropdown,doc_tags]
    doc_tags
  end

  def Edit.html_file(doc,user=nil) #doc={tag: ..., dyn_file: ..., doc_tags_info: ...}
    html_file=File.join(File.dirname(doc[:dyn_file]),File.basename(doc[:dyn_file],".*")+".html")
    docs=Edit.get_docs(doc[:doc_tags_info])
    if !docs.empty? and docs.keys.include? doc[:tag]
      doc_extra=docs[doc[:tag]]
      if doc_extra[0,1]=="_"
        doc_extra +=doc[:tag] if doc_extra.length==1
        html_file=File.join(File.dirname(doc[:dyn_file]),File.basename(doc[:dyn_file],".*")+doc_extra+".html")
      elsif doc_extra[0,1]=="~"
        # from user root
        if user
          html_file=File.join("/users",user,doc_extra[1..-1]+".html")
        end
      elsif doc_extra[0,1]=="/"
        # from global root
        html_file=File.join(doc_extra[1..-1]+".html")
      elsif !doc_extra.empty?
        html_file=File.join(File.dirname(doc[:dyn_file]),doc_extra+".html")
      end
    end
    return html_file
  end

  def Edit.html_files(doc,user=nil) #doc={dyn_file: ..., doc_tags_info: ...}
    html_files={}
    doc_tags=[""]+Edit.get_doc_tags(doc[:doc_tags_info])
    doc2=doc.dup
    doc_tags.each do |tag|
      doc2[:tag]=tag
      html_file=Edit.html_file(doc2,user)
      html_files[tag]=html_file
    end
    return html_files
  end


end

## Mandatory input
p args
dyn_file,doc_tag=args[0].split(":")
doc_tag="" unless doc_tag
doc_tag="__ALL_DOC_TAG__" if doc_tag.downcase == "all"

## Detect docs_tags_info
dyn_file=File.join(["","users",current_email],dyn_file[1..-1]) if dyn_file[0,1]=="%"
filename=File.join(edit_root,dyn_file)
doc_tags_info=Edit.get_doc_tags_info(File.read(filename))

if dyn_file and (dyn_file=~/(.*)(?:\.dyn|_html.dyn)$/)
  #p [:dyn_file,dyn_file,$1]
  html_files=Edit.html_files({doc_tags_info: doc_tags_info , dyn_file: dyn_file },current_email)
  ##p [:html_files,html_files]
  html_file=html_files[doc_tag] || html_files[""]

# Ex for opts:
# rdrouilh : [:dyn_opts, {:dyn_root=>"/Users/remy/RCqls/RodaServer/edit", :html_root=>"/Users/remy/RCqls/RodaServer/public/pages", :user=>"rdrouilh@gmail.com", :doc_tag=>"bio", :html_files=>{""=>"/dev/R/test.html", "ssd"=>"/dev/R/ssd.html", "bio"=>"/dev/R/bio.html", "tmp"=>"/dev/R/tmp.html", "cours"=>"/dev/R/cours.html"}}]
# remy.drouilhet : [:dyn_opts, {:dyn_root=>"/Users/remy/RCqls/RodaServer/edit", :html_root=>"/Users/remy/RCqls/RodaServer/public/pages", :user=>"remy.drouilhet@upmf-grenoble.fr", :doc_tag=>"index", :html_files=>{""=>"/users/remy.drouilhet@upmf-grenoble.fr/cfies2017/index.html", "index"=>"/users/remy.drouilhet@upmf-grenoble.fr/cfies2017/index.html", "dates"=>"/users/remy.drouilhet@upmf-grenoble.fr/cfies2017/dates.html", "sc"=>"/users/remy.drouilhet@upmf-grenoble.fr/cfies2017/sc.html", "orga"=>"/users/remy.drouilhet@upmf-grenoble.fr/cfies2017/orga.html"}}]

  opts = {
    dyn_root: edit_root,
    html_root: pages_root,
    user: current_email,
    doc_tag: doc_tag,
    html_files: html_files
  }
  p opts

  Dyndoc.cli_convert_from_file(dyn_file[1..-1],html_file, opts)
end
